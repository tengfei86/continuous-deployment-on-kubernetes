<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <!--<groupId>com.lgc.dist</groupId>
        <artifactId>com.lgc.dist.core.msp.service.pom</artifactId>
        <version>4.2.0-M1</version>-->
        <artifactId>dspdm-services</artifactId>
        <groupId>com.lgc.dspdm</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>com.lgc.dspdm</groupId>
    <artifactId>dspdm.msp.mainservice</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <!--<msp.root>/msp</msp.root>-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <top.basedir>${project.basedir}/..</top.basedir>
        <config.dir>${top.basedir}/src/main/resources</config.dir>
        <test.dir>${top.basedir}/src/test/resources</test.dir>
        <jaxbapi.version>2.3.1</jaxbapi.version>
        <!-- api document generation properties -->
        <enunciate-plugin.version>2.13.1</enunciate-plugin.version>
        <enunciate.skip>false</enunciate.skip>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <enunciate.file>target/enunciate.xml</enunciate.file>
        <enunciate.include.pattern>${project.artifactId}.**</enunciate.include.pattern>
        <enunciate.exclude.pattern/>
        <proj.title/>
        <proj.description/>
        <!-- root directory name -->
        <workdir.name>javarun</workdir.name>
        <docker.skip>true</docker.skip>
        <docker.plugin.version>1.4.13</docker.plugin.version>
        <!-- docker.repo is where images are pulled from -->
        <docker.repo>distservices-docker-release.repo.openearth.io</docker.repo>
        <!-- docker.registry is where images are pushed to -->
        <docker.registry>${docker.repo}</docker.registry>
        <docker.pullonBuild>false</docker.pullonBuild>
        <grizzly.home>${project.build.directory}/docker/${workdir.name}</grizzly.home>
        <grizzly.root>/msp</grizzly.root>
        <!-- docker image name repository part -->
        <docker.imageName.prefix>${docker.registry}/distarch/${project.artifactId}</docker.imageName.prefix>
        <docker.tag>${project.version}</docker.tag>
        <!-- full docker image name -->
        <docker.imageName>${docker.imageName.prefix}:${docker.tag}</docker.imageName>
        <!--docker skipping option -->
        <docker.skip>true</docker.skip>
        <uber.jar.main.class>com.lgc.dspdm.msp.mainservice.client.mainservice</uber.jar.main.class>
        <release.url>https://artifacts.repo.openearth.community/artifactory/distservices-maven-staging</release.url>
        <snapshot.url>https://artifacts.repo.openearth.community/artifactory/distservices-maven-snapshots</snapshot.url>
        <resource-plugin.version>3.1.0</resource-plugin.version>
        <dependency-plugin.version>2.10</dependency-plugin.version>
        <swagger-maven-plugin.version>2.1.0</swagger-maven-plugin.version>
        <jacoco.plugin.version>0.8.4</jacoco.plugin.version>
        <compiler-plugin.version>3.10.1</compiler-plugin.version>
        <deploy-plugin.version>3.0.0-M1</deploy-plugin.version>
        <junit.version>5.4.0</junit.version>
        <jsonassert.version>1.5.0</jsonassert.version>
        <jersey.version>3.0.2</jersey.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.lgc.dspdm</groupId>
            <artifactId>dspdm-config</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.lgc.dspdm</groupId>
            <artifactId>dspdm-service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.9</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.9</version>
        </dependency>
        <!-- javax.activation added for open jdk -->
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.25.0-GA</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2</artifactId>
            <version>2.0.8</version>
            <exclusions>
                <exclusion>
                    <groupId>org.javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2-servlet-initializer</artifactId>
            <version>2.0.8</version>
        </dependency>
        <dependency>
            <groupId>com.lgc.dspdm</groupId>
            <artifactId>dspdm-import-export</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.james</groupId>
            <artifactId>apache-mime4j</artifactId>
            <version>0.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.5.3</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.3.3</version>
            <scope>test</scope>
        </dependency>
        <!-- newly added dependencies after MSP removal for OSDU -->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.13.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.13.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.13.0</version>
        </dependency>
        <!-- Grizzly2 HTTP Server -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
        </dependency>
        <!-- Jersey related and HK2 dependency injection -->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
        </dependency>
        <!-- add jackson for json conversion-->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <!-- generates the META-INF/hk2-locator/default files for auto scan and discovery -->
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-metadata-generator</artifactId>
            <version>3.0.2</version>
        </dependency>
        <!-- Need this to hide warning for jakarta.activation.DataSource -->
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <version>2.0.1</version>
        </dependency>
        <!-- JUnit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-multipart -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-cli/commons-cli -->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.5.0</version>
        </dependency>

    </dependencies>
    <distributionManagement>
        <repository>
            <id>snapshots</id>
            <name>release</name>
            <url>${release.url}</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>snapshots</name>
            <url>${snapshot.url}</url>
        </snapshotRepository>
    </distributionManagement>
    <profiles>
        <profile>
            <id>production</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <!-- Copy the artifact jar to the docker build context
                            folder -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                    </plugin>
                    <!-- Collect dependencies to the docker build context
                            folder -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                    </plugin>
                    <!-- Generate enunciate.xml -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                    </plugin>
                    <!-- Support mvn exec -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <!-- Build Swagger doc -->
                    <plugin>
                        <groupId>com.webcohesion.enunciate</groupId>
                        <artifactId>enunciate-maven-plugin</artifactId>
                    </plugin>
                    <!-- Run integration tests (looking for *IT.java or IT*.java) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                    <!-- Run test coverage using Jacoco -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <!-- Generate open API json -->
                    <plugin>
                        <groupId>io.openapitools.swagger</groupId>
                        <artifactId>swagger-maven-plugin</artifactId>
                    </plugin>
                </plugins>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <version>${deploy-plugin.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-release-plugin</artifactId>
                            <version>${release-plugin.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <version>3.8.1</version>
                            <configuration>
                                <source>11</source>
                                <target>11</target>
                            </configuration>
                        </plugin>
                        <!-- Maven Enforcer Plugin -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-enforcer-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>enforce-maven</id>
                                    <goals>
                                        <goal>enforce</goal>
                                    </goals>
                                    <configuration>
                                        <rules>
                                            <requireJavaVersion>
                                                <version>11</version>
                                            </requireJavaVersion>
                                        </rules>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Copy the artifact jar to the docker build context folder -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${resource-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>copy-jar-resources</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${grizzly.home}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${project.build.directory}</directory>
                                                <includes>
                                                    <include>${project.build.finalName}.jar</include>
                                                </includes>
                                                <filtering>false</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-docker-html</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${grizzly.home}/html</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${project.basedir}/src/main/docker/html</directory>
                                                <filtering>false</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-docker-resources</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${grizzly.home}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${project.basedir}/src/main/docker/script</directory>
                                                <includes>
                                                    <incude>*</incude>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>${project.basedir}/src/main/docker/javarun</directory>
                                                <filtering>false</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-docker-file</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/docker</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${project.basedir}/src/main/docker</directory>
                                                <includes>
                                                    <include>Dockerfile</include>
                                                    <include>Dockerfile.windows</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Collect dependencies to the docker build context folder -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <version>${dependency-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>copy-dependencies</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${grizzly.home}</outputDirectory>
                                        <overWriteReleases>false</overWriteReleases>
                                        <overWriteSnapshots>false</overWriteSnapshots>
                                        <overWriteIfNewer>true</overWriteIfNewer>
                                        <includeScope>compile</includeScope>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- generates enunciate.xml in target folder and remove
                        unused dependencies -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-antrun-plugin</artifactId>
                            <version>1.7</version>
                            <dependencies>
                                <dependency>
                                    <groupId>ant-contrib</groupId>
                                    <artifactId>ant-contrib</artifactId>
                                    <version>1.0b3</version>
                                    <exclusions>
                                        <exclusion>
                                            <groupId>ant</groupId>
                                            <artifactId>ant</artifactId>
                                        </exclusion>
                                    </exclusions>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.ant</groupId>
                                    <artifactId>ant-nodeps</artifactId>
                                    <version>1.8.1</version>
                                </dependency>
                                <!-- Enunciate -->
                                <dependency>
                                    <groupId>com.webcohesion.enunciate</groupId>
                                    <artifactId>enunciate-core-annotations</artifactId>
                                    <version>${enunciate-plugin.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>com.webcohesion.enunciate</groupId>
                                    <artifactId>enunciate-rt-util</artifactId>
                                    <version>${enunciate-plugin.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>javax.xml.bind</groupId>
                                    <artifactId>jaxb-api</artifactId>
                                    <version>${jaxbapi.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>create</id>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <phase>generate-sources</phase>
                                    <configuration>
                                        <target name="create-file" unless="${enunciate.file}">
                                            <taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.plugin.classpath"/>
                                            <mkdir dir="target"/>
                                            <echo file="${enunciate.file}" message="&lt;enunciate xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;title&gt;${proj.title}&lt;/title&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;description&gt;${proj.description}&lt;/description&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;application root=&quot;${grizzly.root}&quot; /&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;api-classes&gt;"/>
                                            <for list="${enunciate.include.pattern}" param="en.prop">
                                                <sequential>
                                                    <echo file="${enunciate.file}" append="true" message="&lt;include pattern=&quot;@{en.prop}&quot; /&gt;"/>
                                                </sequential>
                                            </for>
                                            <echo file="${enunciate.file}" append="true" message="&lt;exclude pattern=&quot;${enunciate.exclude.pattern}&quot; /&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;/api-classes&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;modules disabledByDefault=&quot;true&quot;&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;docs disabled=&quot;false&quot;/&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;jaxb disabled=&quot;false&quot;/&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;jackson disabled=&quot;false&quot;/&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;jaxrs disabled=&quot;false&quot;&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;application path=&quot;${grizzly.root}&quot;/&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;/jaxrs&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;/modules&gt;"/>
                                            <echo file="${enunciate.file}" append="true" message="&lt;/enunciate&gt;"/>
                                        </target>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Support mvn exec -->
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>exec-maven-plugin</artifactId>
                            <version>1.6.0</version>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>java</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <mainClass>${main.class}</mainClass>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>dockerfile-maven-plugin</artifactId>
                            <version>${docker.plugin.version}</version>
                            <configuration>
                                <!-- Registry authentication -->
                                <serverId>docker_repo</serverId>
                                <registryUrl>https://${docker.repo}/v2</registryUrl>
                                <!-- Name of the image, with target registry -->
                                <repository>${docker.imageName.prefix}</repository>
                                <tag>${docker.tag}</tag>
                                <contextDirectory>${project.build.directory}/docker</contextDirectory>
                                <dockerInfoDirectory>target/temp</dockerInfoDirectory>
                                <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                                <pullNewerImage>${docker.pullonBuild}</pullNewerImage>
                                <skipBuild>${docker.skip}</skipBuild>
                                <skipTag>${docker.skip}</skipTag>
                                <skipPush>${docker.skip}</skipPush>
                            </configuration>
                            <executions>
                                <!-- Build the Docker image as part of the package
                                phase -->
                                <execution>
                                    <id>docker-build</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>
                                <!-- Push the image during the deploy phase -->
                                <execution>
                                    <id>docker-push</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>push</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${jacoco.plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>default-prepare-agent</id>
                                    <goals>
                                        <goal>prepare-agent</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>default-report</id>
                                    <phase>prepare-package</phase>
                                    <goals>
                                        <goal>report</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Creates Uber jar -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-shade-plugin</artifactId>
                            <version>3.1.1</version>
                            <executions>
                                <execution>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>shade</goal>
                                    </goals>
                                    <configuration>
                                        <transformers>
                                            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                                <mainClass>${uber.jar.main.class}</mainClass>
                                            </transformer>
                                        </transformers>
                                        <artifactSet>
                                            <excludes>junit:junit</excludes>
                                        </artifactSet>
                                        <filters>
                                            <filter>
                                                <artifact>*:*</artifact>
                                                <excludes>
                                                    <exclude>META-INF/maven/**</exclude>
                                                    <exclude>META-INF/*.SF</exclude>
                                                    <exclude>META-INF/*.DSA</exclude>
                                                    <exclude>META-INF/*.RSA</exclude>
                                                </excludes>
                                            </filter>
                                        </filters>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>com.webcohesion.enunciate</groupId>
                            <artifactId>enunciate-maven-plugin</artifactId>
                            <version>${enunciate-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>generate-service-docs</id>
                                    <phase>generate-resources</phase>
                                    <goals>
                                        <goal>docs</goal>
                                    </goals>
                                    <configuration>
                                        <docsDir>${grizzly.home}/html</docsDir>
                                        <configFile>${enunciate.file}</configFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>io.openapitools.swagger</groupId>
                            <artifactId>swagger-maven-plugin</artifactId>
                            <version>${swagger-maven-plugin.version}</version>
                            <configuration>
                                <resourcePackages>
                                    <resourcePackage>${project.artifactId}</resourcePackage>
                                </resourcePackages>
                                <outputDirectory>${basedir}/target/</outputDirectory>
                                <outputFilename>openapi</outputFilename>
                                <outputFormats>JSON</outputFormats>
                                <prettyPrint>true</prettyPrint>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>generate</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <configuration>
                                <appendAssemblyId>false</appendAssemblyId>
                                <descriptorRefs>
                                    <descriptorRef>jar-with-dependencies</descriptorRef>
                                </descriptorRefs>
                                <archive>
                                    <manifest>
                                        <mainClass>com.lgc.dspdm.msp.mainservice.GrizzlyServer</mainClass>
                                    </manifest>
                                </archive>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>make-assembly</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>assembly</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <!--<plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-antrun-plugin</artifactId>
                            <version>1.8</version>
                            <executions>
                                <execution>
                                    <id>copy-vdb</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <configuration>
                                        <target>
                                            <copy file="${project.basedir}/../dspdm-vdb/target/dspdm-vdb-${pom.version}.vdb" tofile="${project.build.directory}/docker/javarun/dspdm-vdb-${pom.version}.vdb"/>
                                        </target>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>-->
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>pom-build</id>
        </profile>
    </profiles>
</project>
